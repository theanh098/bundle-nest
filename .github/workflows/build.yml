name: build

on:
  pull_request:
    branches:
      - main

jobs:
  setups:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install

      - name: Install docker compose
        shell: bash
        run: |
          sudo curl -SL https://github.com/docker/compose/releases/download/v2.23.0/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

  bundle:
    runs-on: ubuntu-latest
    needs: setups
    steps:
      - name: Bundle
        run: pnpm bundle

  lint:
    runs-on: ubuntu-lastes
    needs: setups
    steps:
      - name: Check lint
        run: pnpm lint

  test-e2e:
    runs-on: ubuntu-latest
    needs: setups
    steps:
      - name: Test e2e
        run: pnpm test:e2e

  test-database:
    runs-on: ubuntu-latest
    needs: setups
    steps:
      - name: Test e2e
        run: pnpm test:database

  test-unit:
    runs-on: ubuntu-latest
    needs: setups
    steps:
      - name: Test e2e
        run: pnpm test:unit

  ping-on-slack:
    runs-on: ubuntu-latest
    needs: [bundle, lint, test-e2e, test-database, test-unit]
    if: always()
    steps:
      - name: Set Emoji
        id: set-emoji
        run: |
          if [ ${{ needs.build-and-test.result }} = "success" ]; then
            echo "EMOJI=:tada:" >> $GITHUB_OUTPUT
          else
            echo "EMOJI=:bangbang:" >> $GITHUB_OUTPUT
          fi

      - name: post to a Slack channel
        env:
          EMOJI: ${{ steps.set-emoji.outputs.EMOJI }}
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        id: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          channel-id: "C063UHSFAQ7"
          payload: |
            {
                "text": "${{env.EMOJI}} Building workflow",
                "blocks": [
                    {
                        "type": "section",
                        "text": {
                            "type": "mrkdwn",
                            "text": "${{env.EMOJI}} Build and test are ${{ needs.build-and-test.result }}\n${{ github.event.pull_request.html_url }}"
                        }
                    }
                ]
            }
